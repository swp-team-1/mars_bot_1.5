import os
import time
import json
from yandexcloud import SDK

class IAMTokenManager:
    def __init__(self, token_ttl=3600):
        self.token_ttl = token_ttl  # 1 —á–∞—Å
        self.iam_token = None
        self.token_created_at = 0
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        sa_key_json = os.getenv("SA_KEY")
        if not sa_key_json:
            raise ValueError("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è SA_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        
        try:
            # –ü–∞—Ä—Å–∏–º JSON –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
            sa_key = json.loads(sa_key_json)
            self.sdk = SDK(service_account_key=sa_key)
        except json.JSONDecodeError:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON –≤ SA_KEY")
        except Exception as e:
            raise ValueError(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SDK: {str(e)}")

    def get_iam_token(self):
        now = time.time()
        if not self.iam_token or now - self.token_created_at > self.token_ttl:
            try:
                # –ü–æ–ª—É—á–∞–µ–º IAM —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ SDK
                iam_token = self.sdk._client_credentials.iam_token
                if not iam_token:
                    raise ValueError("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IAM —Ç–æ–∫–µ–Ω")
                
                self.iam_token = iam_token
                self.token_created_at = now
                print("üîÑ IAM —Ç–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ IAM —Ç–æ–∫–µ–Ω–∞: {str(e)}")
                raise
        return self.iam_token

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
try:
    iam_manager = IAMTokenManager()
    IAM_TOKEN = iam_manager.get_iam_token()
    print(f"‚úÖ IAM —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {IAM_TOKEN[:10]}...")  # –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ —Ç–æ–∫–µ–Ω–∞
except Exception as e:
    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
    IAM_TOKEN = None
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
